package TextProcessing;

import java.util.*;

public class PasswordReset {
    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);
        String password = scanner.nextLine();
        String input = scanner.nextLine();
        while (!input.equals("Done")) {
            String[] tokens = input.split(" ");
            String command = tokens[0];
            switch (command) {
                case "TakeOdd":
                    password = takeOnlyTheOddIndices(password);
                    System.out.println(password);
                    break;
                case "Cut":
                    password = cutAGivenSubstring(password, tokens);
                    System.out.println(password);
                    break;

                case "Substitute":
                    password = substituteGivenString(password, tokens);
                    break;

            }
            input = scanner.nextLine();
        }
        System.out.println("Your password is: " + password);
    }
    private static String substituteGivenString(String password, String[] tokens) {
        String substring = tokens[1];
        String substitute = tokens[2];
        if (!password.contains(substring)) {
            System.out.println("Nothing to replace!");
            return password;
        }
        String newPass = password.replaceAll(substring, substitute);
        System.out.println(newPass);
        return newPass;
    }
    private static String cutAGivenSubstring(String password, String[] tokens) {
        int index =Integer.parseInt(tokens[1]); // beginning index
        int length =Integer.parseInt(tokens[2]); //  length
        StringBuilder ab =new StringBuilder(password); // remove from start to start + length(to get the final index)
        ab.delete(index,index+length);
        return ab.toString();
    }




    private static String takeOnlyTheOddIndices(String password){
        char[]arr=password.toCharArray();
        StringBuilder sb=new StringBuilder();
        for(int i=0;i<arr.length;i++){
        if(i%2!=0){
        sb.append(arr[i]);
        }
        }
        return sb.toString();

        }
        }
